Q. Arrow Function :
-> Arrow functions, introduced in ES6 (ECMAScript 2015).
✅ Arrow functions allows a short syntax for writing function expressions.
✅ Arrow function is useful for short, single-expression functions.
✅ Arrow functions make JavaScript code more concise and readable. 
✅ Arrow functions provide a concise and clean syntax for writing functions in JavaScript

Q. Postman :
-> Postman is a popular API testing tool that allows developers to send HTTP requests, inspect responses, automate tests, and document APIs.
- It simplifies API development by providing a user-friendly interface for interacting with REST, SOAP, and GraphQL APIs.
    ✅ Postman is a collaboration platform for API development. It allows developers to:
    ✅ Send HTTP requests (GET, POST, PUT, DELETE, etc.).
    ✅ Test APIs and validate responses.
    ✅ Automate API testing with collections and scripts.
    ✅ Document APIs.
    ✅ Mock APIs for testing without a backend.
    ✅ Monitor APIs for performance and uptime.
    ✅ Collaborate with teams by sharing collections and environments.

Q. What is Axios?
-> Axios is a promise-based HTTP client for making requests to APIs. It supports:
    ✅ Making GET, POST, PUT, DELETE requests.
    ✅ Handling request and response interceptors.
    ✅ Automatic JSON data transformation.
    ✅ Timeout handling.
    ✅ Request cancellation.

Q. useState :
-> useState is one of the most fundamental and widely-used hooks in React.
✅ It allows functional components to manage state, enabling them to store and update data dynamically.
✅ useState is a React Hook that allows you to add state to functional components.
✅ The useState hook is one of the most commonly used hooks in React.
✅ It allows functional components to manage state without needing a class component.
✅ With useState, functional components can now manage state without converting to class components.

    * const [state, setState] = useState(initialValue);
    ✅ state – The current state value.
    ✅ setState – A function to update the state.
    ✅ initialValue – The default value of the state.


    ✅ When you call useState, it returns an array with two elements:
    ✅ The current state value.
    ✅ A function to update the state.
    ✅ React rerenders the component whenever the state is updated using the setState function.

    import React, { useState } from 'react';

    function Counter() {
    const [count, setCount] = useState(0);

    return (
        <div>
        <p>You clicked {count} times</p>
        <button onClick={() => setCount(count + 1)}>
            Click me
        </button>
        </div>
    );
    }

    Explanation:
    ✅ count is the state variable initialized to 0.
    ✅ setCount is the function to update count.
    ✅ Clicking the button increments the count and triggers a re✅render.

Q. What is useEffect?
-> useEffect is a React Hook that allows functional components to handle side effects such as:

- Fetching data from an API
- Manipulating the DOM
- Setting up subscriptions or event listeners
- Managing timers or intervals
- Before React Hooks, side effects were handled using lifecycle methods like componentDidMount, componentDidUpdate, and componentWillUnmount inside class components. 
useEffect combines all these functionalities into one.


